/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class apg_NativeLib */

#ifndef _Included_apg_NativeLib
#define _Included_apg_NativeLib
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     apg_NativeLib
 * Method:    hypergeometricInitialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_apg_NativeLib_hypergeometricInitialize
  (JNIEnv *, jclass);

/*
 * Class:     apg_NativeLib
 * Method:    fFromPartial
 * Signature: (IJ)J
 */
JNIEXPORT jlong JNICALL Java_apg_NativeLib_fFromPartial
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     apg_NativeLib
 * Method:    fWithPartial
 * Signature: (IJIJ)J
 */
JNIEXPORT jlong JNICALL Java_apg_NativeLib_fWithPartial
  (JNIEnv *, jclass, jint, jlong, jint, jlong);

/*
 * Class:     apg_NativeLib
 * Method:    findOrthogonalVectorImpl
 * Signature: (IDDD)J
 */
JNIEXPORT jlong JNICALL Java_apg_NativeLib_findOrthogonalVectorImpl
  (JNIEnv *, jclass, jint, jdouble, jdouble, jdouble);

/*
 * Class:     apg_NativeLib
 * Method:    expQTtx
 * Signature: (IDDDDJ)J
 */
JNIEXPORT jlong JNICALL Java_apg_NativeLib_expQTtx
  (JNIEnv *, jclass, jint, jdouble, jdouble, jdouble, jdouble, jlong);

/*
 * Class:     apg_NativeLib
 * Method:    siteLikelihood
 * Signature: (IJJ)D
 */
JNIEXPORT jdouble JNICALL Java_apg_NativeLib_siteLikelihood
  (JNIEnv *, jclass, jint, jlong, jlong);

/*
 * Class:     apg_NativeLib
 * Method:    copyToNativeImpl
 * Signature: ([D)J
 */
JNIEXPORT jlong JNICALL Java_apg_NativeLib_copyToNativeImpl
  (JNIEnv *, jclass, jdoubleArray);

/*
 * Class:     apg_NativeLib
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_apg_NativeLib_free
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
